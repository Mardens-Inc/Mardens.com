import React, { useState, useRef, useEffect } from 'react';

interface MaineLocationPinsIconProperties
{
    // The size of the component while maintaining aspect ratio.
    size?: number | string;
    onLocationPinHover?: (location: string) => void;
    onLocationPinClick?: (location: string) => void;
}

const SVG_WIDTH = 397.12;
const SVG_HEIGHT = 586.69;
const TOOLTIP_OFFSET_X = 8;
const TOOLTIP_OFFSET_Y = 35;

export function MaineLocationPins(props: MaineLocationPinsIconProperties)
{
    const [hoveredPin, setHoveredPin] = useState<string | null>(null);
    const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });
    const [tooltipSize, setTooltipSize] = useState({ width: 0, height: 0 });
    const tooltipRef = useRef<HTMLDivElement>(null);

    useEffect(() => {
        if (tooltipRef.current && hoveredPin) {
            const rect = tooltipRef.current.getBoundingClientRect();
            // Convert pixel size to SVG coordinates
            const svg = tooltipRef.current.closest('svg');
            if (svg) {
                const svgRect = svg.getBoundingClientRect();
                const scale = SVG_WIDTH / svgRect.width;
                setTooltipSize({
                    width: rect.width * scale,
                    height: rect.height * scale
                });
            }
        }
    }, [hoveredPin]);

    const handlePinMouseEnter = (locationId: string, locationName: string, event: React.MouseEvent) => {
        setHoveredPin(locationId);
        updateTooltipPosition(event);
        props.onLocationPinHover?.(locationName);
    };

    const handlePinMouseLeave = () => {
        setHoveredPin(null);
    };

    const handlePinMouseMove = (event: React.MouseEvent) => {
        updateTooltipPosition(event);
    };

    const updateTooltipPosition = (event: React.MouseEvent) => {
        const svg = event.currentTarget.closest('svg');
        if (svg) {
            // Convert screen coordinates to SVG coordinates
            const pt = svg.createSVGPoint();
            pt.x = event.clientX;
            pt.y = event.clientY;
            const svgP = pt.matrixTransform(svg.getScreenCTM()?.inverse());

            // Calculate tooltip position with offset
            let tooltipX = svgP.x + TOOLTIP_OFFSET_X;
            let tooltipY = svgP.y - TOOLTIP_OFFSET_Y;

            // Constrain within SVG bounds
            // Check right edge
            if (tooltipX + tooltipSize.width > SVG_WIDTH) {
                tooltipX = svgP.x - tooltipSize.width - TOOLTIP_OFFSET_X;
            }

            // Check left edge
            if (tooltipX < 0) {
                tooltipX = 0;
            }

            // Check top edge
            if (tooltipY < 0) {
                tooltipY = svgP.y + TOOLTIP_OFFSET_Y;
            }

            // Check bottom edge
            if (tooltipY + tooltipSize.height > SVG_HEIGHT) {
                tooltipY = SVG_HEIGHT - tooltipSize.height;
            }

            setTooltipPosition({
                x: tooltipX,
                y: tooltipY
            });
        }
    };

    const handlePinClick = (locationName: string) => {
        props.onLocationPinClick?.(locationName);
    };

    const getLocationName = (id: string, dataName?: string): string => {
        return dataName || id.replace(/_/g, ' ');
    };

    const renderPin = (id: string, d: string, dataName?: string) => {
        const locationName = getLocationName(id, dataName);
        const isHovered = hoveredPin === id;

        return (
            <path
                key={id}
                id={id}
                data-name={dataName}
                className="cls-3"
                d={d}
                style={{
                    cursor: 'pointer',
                    transformOrigin: 'bottom center',
                    transformBox: 'fill-box',
                    transform: isHovered ? 'scale(1.15)' : 'scale(1)',
                    transition: 'transform 0.15s ease-out',
                    filter: isHovered ? 'drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3))' : 'none'
                }}
                onMouseEnter={(e) => handlePinMouseEnter(id, locationName, e)}
                onMouseLeave={handlePinMouseLeave}
                onMouseMove={handlePinMouseMove}
                onClick={() => handlePinClick(locationName)}
            />
        );
    };

    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 397.12 586.69"
            width={props.size}
            style={{ position: 'relative', display: 'block' }}
        >
            <defs>
                <style>{`
                    .cls-1 {
                        fill-rule: evenodd;
                    }

                    .cls-1, .cls-2 {
                        fill: #ed2b37;
                        stroke: #ebeae4;
                        stroke-linecap: round;
                        stroke-linejoin: round;
                        stroke-width: .98px;
                    }

                    .cls-3 {
                        fill: #ffc509;
                    }
                `}</style>
            </defs>
            <g id="Trace">
                <g>
                    <polygon className="cls-1" points="214.56 146.47 214.6 122.74 129.87 122.58 101.83 122.73 104.59 106.13 175.85 .49 193.15 4.86 194.12 27.8 207.52 38.24 243.41 22.29 255.07 23.94 260.4 13.88 270.22 14.6 311.74 55.07 312.75 207.88 315.08 212.02 311.41 217.19 314.73 224.06 310.61 228.57 310.57 244.32 287.83 250.04 267.67 254.29 267.72 255.59 253.5 258.63 251.02 256.94 251.23 233.25 252.12 231.75 250.58 188.04 250.82 148.72 226.49 148.2 226.46 146.56 214.56 146.47"/>
                    <polygon className="cls-1" points="51.03 246.67 65.74 238.38 63.87 229.14 79.19 214.41 79.8 208.22 73.87 204.93 76.73 193.46 74.39 191.63 81.52 181.99 76.4 174.79 85.13 155.04 98.77 142.55 101.83 122.73 129.87 122.58 128.76 204.38 133.06 203.83 136.26 219.15 133.83 220.9 131 216.61 129.55 217.29 131.22 222.71 129.67 224.25 130.68 226.4 128.62 231.15 128.99 233.89 125.35 233.85 124.11 231.25 122.63 234.1 122.87 235.66 120.92 236.38 122.58 238.06 124.09 242.9 128.13 244.87 127.77 247.27 131.76 247.69 131.63 249.17 130.5 249.68 131.9 252.77 130.45 253.51 130.7 257.47 124.17 263.22 131.73 295.93 130.86 296.26 136.31 321.68 137.04 321.6 140.27 333.66 151.36 331.31 150.97 328.05 164.33 325.64 171.84 361.19 170.89 361.81 172.5 372.28 166.99 373.1 165.05 368.2 161.45 368.45 160.24 369.55 159.55 374.98 153.92 375.92 152.37 372.93 138.53 375.38 139.44 380.58 143.14 384.63 142.93 387.83 140.7 391.36 124.07 388 122.2 391.79 120.47 391.17 119.85 387.33 117.13 385.88 110.57 387.47 108.69 383.21 105.64 380.78 107.09 379.51 106.91 377.99 103.49 378.57 101.64 367.63 102.88 367.2 101.36 359.96 100.37 360.23 100.17 357.78 100.91 357.57 100.17 353.34 90.93 354.67 90.26 348.67 89.23 348.75 88.85 346.06 89.76 346.1 89.52 342.98 93.02 342.27 88.5 318.46 75.78 320.4 74.04 313.35 68.89 313.95 69.15 315.06 63.74 316.02 53.62 266.64 54.98 266.51 51.03 246.67"/>
                    <polygon className="cls-1" points="129.87 122.58 214.6 122.74 214.56 146.47 214.02 243.46 202.1 246.22 200.78 266.66 210.95 264.86 218.83 302.76 209.6 304.71 211.44 315.9 164.33 325.64 150.97 328.05 151.36 331.31 140.27 333.66 137.04 321.6 136.31 321.68 130.86 296.26 131.73 295.93 124.17 263.22 130.7 257.47 130.45 253.51 131.9 252.77 130.5 249.68 131.63 249.17 131.76 247.69 127.77 247.27 128.13 244.87 124.09 242.9 122.58 238.06 120.92 236.38 122.87 235.66 122.63 234.1 124.11 231.25 125.35 233.85 128.99 233.89 128.62 231.15 130.68 226.4 129.67 224.25 131.22 222.71 129.55 217.29 131 216.61 133.83 220.9 136.26 219.15 133.06 203.83 128.76 204.38 129.87 122.58"/>
                    <polygon className="cls-1" points="164.33 325.64 211.44 315.9 209.6 304.71 218.83 302.76 210.95 264.86 200.78 266.66 202.1 246.22 214.02 243.46 214.56 146.47 226.46 146.56 226.49 148.2 250.82 148.72 250.58 188.04 252.12 231.75 251.23 233.25 251.02 256.94 253.5 258.63 267.72 255.59 267.67 254.29 287.83 250.04 297.92 299.49 287.28 301.15 263.63 305.22 266.01 321.6 254.76 323.8 256.48 336 244.83 338.07 249.98 366.69 234.86 369.65 230.69 374.57 227.4 372.57 224.21 375.36 221.76 379.96 219.65 379.78 219.72 378.51 216.82 377.08 214.21 377.18 213.46 375.26 210.54 375.34 207.79 376.83 207.27 376.26 180.59 382.75 177.88 371.57 172.5 372.28 170.89 361.81 171.84 361.19 164.33 325.64"/>
                    <polygon className="cls-1" points="23.59 298.18 26.44 287.9 24.88 283.05 27.92 278.42 43.22 282.89 35.2 266.6 51.03 246.67 54.98 266.51 53.62 266.64 63.74 316.02 69.15 315.06 68.89 313.95 74.04 313.35 75.78 320.4 88.5 318.46 93.02 342.27 89.52 342.98 89.76 346.1 88.85 346.06 89.23 348.75 90.26 348.67 90.93 354.67 100.17 353.34 100.91 357.57 100.17 357.78 100.37 360.23 101.36 359.96 102.88 367.2 101.64 367.63 103.49 378.57 106.91 377.99 107.09 379.51 105.64 380.78 108.69 383.21 110.57 387.47 107.79 391.59 100.46 390.07 96.77 397.36 100.52 400.35 99.29 403.63 91.42 403.66 84.37 404.59 81.33 406.34 79.82 401.69 77.55 400.94 76.46 396.36 74.46 396.4 76.64 391.89 51.85 387.32 54.76 385.49 44.47 362.99 30.42 370.57 29.59 355.54 27.97 345.93 26.94 345.9 25.38 334.32 29.12 333.41 23.59 298.18"/>
                    <polygon className="cls-1" points="7.94 430.67 6.04 379.54 .49 295.05 12.59 290.02 20.42 305.24 23.59 298.18 29.12 333.41 25.38 334.32 26.94 345.9 27.97 345.93 29.59 355.54 30.42 370.57 44.47 362.99 54.76 385.49 51.85 387.32 76.64 391.89 74.46 396.4 76.46 396.36 77.55 400.94 79.82 401.69 81.33 406.34 77.41 409.14 78.59 419.26 73.04 439.08 57.72 463.26 51.82 466.6 45.72 460.3 47.57 451.81 45.52 447.19 44.37 445.65 25.55 457.41 21.94 455.61 20.77 456.47 22.79 459.12 23.08 461.28 27.24 462.77 35.32 472.17 32.65 474.77 34.07 477.09 31.98 480.3 31.83 484.65 29.79 484.64 27.58 486.24 29.13 491.78 17.2 494.01 14.27 495.76 10.22 495.15 7.94 430.67"/>
                    <polygon className="cls-1" points="91.42 403.66 99.29 403.63 100.52 400.35 96.77 397.36 100.46 390.07 107.79 391.59 110.57 387.47 117.13 385.88 119.85 387.33 120.47 391.17 122.2 391.79 124.07 388 140.7 391.36 142.93 387.83 143.14 384.63 139.44 380.58 138.53 375.38 152.37 372.93 153.92 375.92 152.94 376.12 152.88 378.66 156.73 379.45 154.07 382.96 159.67 383.9 158.51 395.28 162.77 396.1 160.52 407.47 156.02 406.71 149.93 422.83 148.32 430.1 146.25 433.19 136.64 430.82 134.68 436.86 135.65 451.02 126.76 449.3 126.26 447.12 116.96 445.03 114.98 447.46 113 453.02 103.27 450.99 101.02 450.11 101.22 446.94 102.18 446.92 102.57 444.77 103.4 445.11 103.82 443.81 96.13 440.3 96.22 429.36 91.78 418.52 93.59 417.09 91.42 403.66"/>
                    <polygon className="cls-1" points="103.27 450.99 101.43 462 100.07 464.16 101.16 466.96 99.6 469.7 99.96 471.27 96.31 476.74 94.72 475.84 92.69 478.57 84.76 474.36 85.18 472.88 73.87 462.63 68.88 469.02 66.48 467.37 65.24 468.4 59.35 465.31 57.72 463.26 73.04 439.08 78.59 419.26 77.41 409.14 81.33 406.34 84.37 404.59 91.42 403.66 93.59 417.09 91.78 418.52 96.22 429.36 96.13 440.3 103.82 443.81 103.4 445.11 102.57 444.77 102.18 446.92 101.22 446.94 101.02 450.11 103.27 450.99"/>
                    <polygon className="cls-1" points="29.13 491.78 27.58 486.24 29.79 484.64 31.83 484.65 31.98 480.3 34.07 477.09 32.65 474.77 35.32 472.17 27.24 462.77 23.08 461.28 22.79 459.12 20.77 456.47 21.94 455.61 25.55 457.41 44.37 445.65 45.52 447.19 47.57 451.81 45.72 460.3 51.82 466.6 57.72 463.26 59.35 465.31 65.24 468.4 66.48 467.37 68.88 469.02 73.87 462.63 85.18 472.88 84.76 474.36 92.69 478.57 94.72 475.84 96.31 476.74 99.96 471.27 100.37 472.9 105.6 478.27 111.26 477.85 116.67 473.6 116.36 477.95 113.86 483.96 112.32 495.21 105.73 498.07 103.22 495.8 104.36 488.01 100.68 488.03 88.38 495.33 80.91 508.92 82.19 523.09 70.92 528.6 56.64 518.69 59.2 514.15 50.75 505.04 49.13 508.61 46.83 507.58 45.87 509.45 44.52 507.02 41.79 506.57 42.11 499.08 40.45 495.39 37.4 493.37 31.96 494.91 29.74 493.35 29.13 491.78"/>
                    <path className="cls-2" d="M124.2,458.05l2.56-8.75-.5-2.18-9.3-2.09-1.97,2.44-1.99,5.55-9.72-2.03-1.85,11.01-1.35,2.16,1.08,2.8-1.56,2.75.36,1.57.41,1.63,5.24,5.36,5.66-.42,5.41-4.25-.31,4.35-2.5,6.01,3.84,4.5-.53,12.82,2.02,2.14,3.67-3.67-6.46-31.95,7.8-9.74h-.01ZM131.05,466.34l-8.99-2.07,2.11,30.88,2.58,3.87,2.43-2.98-2.25-14.25,2.63-5.85,1.5-9.59h-.01Z"/>
                    <polygon className="cls-1" points="12.12 528.98 13.51 526.77 12.86 524.79 11.22 523.79 10.22 495.15 14.27 495.76 17.2 494.01 29.13 491.78 29.74 493.35 31.96 494.91 37.4 493.37 40.45 495.39 42.11 499.08 41.79 506.57 44.52 507.02 45.87 509.45 46.83 507.58 49.13 508.61 50.75 505.04 59.2 514.15 56.64 518.69 70.92 528.6 68.62 542.21 60.02 552.72 52.28 554.5 40.32 586.2 25.87 582.21 24.75 577.39 26.39 567.54 18.09 561.6 17.64 558.87 11.61 550.52 10.72 546.65 12.39 541.2 11.51 537.02 12.6 531.01 12.12 528.98"/>
                    <path className="cls-2" d="M132.55,490.31l.37,2.21,1.97,2.9,1.11-.17.37-3.75.12-2.39-2.46-2.05-1.48,3.24h0ZM134.4,475.3v-1.71l-.86-1.54-1.48,2.9-.61,2.39-2.09,2.56-.74,2.22.86,2.39.61,1.71h0s0-.01,0-.01v-.02h.02l.02-.03.02-.02.02-.02.02-.02.02-.02.02-.02.03-.03.03-.03.03-.03.03-.03.03-.03.03-.03.03-.03.03-.03.03-.03.03-.03.03-.04.04-.04.03-.04.04-.04.04-.04.04-.04.04-.04.04-.04.04-.04.04-.04.07-.07.04-.04.04-.03.03-.03.03-.03.03-.03.03-.03.03-.03.03-.03.03-.03.03-.03.03-.03.03-.03.03-.02.05-.04.02-.02.02-.03.02-.04.02-.05.02-.06.02-.07.02-.07.03-.08.03-.09.03-.09.03-.1.03-.1.03-.11.03-.11.03-.12.03-.12.03-.12.03-.12.03-.13.03-.13.03-.13.03-.13.03-.13.02-.13.02-.13.02-.13.02-.13.02-.13.02-.13.02-.13.02-.12.02-.12.02-.12.02-.12.02-.11.02-.11.02-.1.02-.1v-.09l.03-.09v-.08l.02-.07v-.07l.02-.06v-.09s0-.03,0-.03v-.04l.86-3.75,1.11-1.19-.02-.04ZM169.09,455.37l.4-4.48-3.32-10.79-6.67-.44-.42-1.22-2.92-1.88-.52-9.23.4-1.97,2.03.52.38-1.61-8.51-1.43-1.61,7.27-2.08,3.09-9.6-2.37-1.97,6.05.98,14.16-8.89-1.72-2.56,8.75.99,3.47-3.14,2.74,8.99,2.07-1.5,9.59,10.17-12.55-4,7.01-.87,16.78,7.09.96,10.02-5.54,8.38-18.1,4.53,1.2,1.69.63,4.35-7.75-1.83-3.21h.01Z"/>
                    <path className="cls-2" d="M185.25,433.59l-12.58-13.88-7.71,6.85-4.43-4.49-2.1,2.19-.38,1.61-2.03-.52-.4,1.97.52,9.23,2.92,1.88.42,1.22,6.67.44,3.32,10.79-.4,4.48,1.83,3.21-4.35,7.75-1.69-.63,4.99,9.68,7.03-.6,13.66-16.05,5-23.03-1.67-1.11-8.64-.99h.02ZM208.16,450.67l2.34,1.37,1.11-.68.98-1.71,1.6-.86,1.23-.51v-2.74l-.86-1.2-3.44-.34-3.07,2.23-3.69,2.91-1.11,2.23-.25,1.03.49,1.54,1.72-2.57,1.72-1.2,1.23.51h0ZM235.21,458.55l-.49-2.4-1.84-.34-1.35,1.71-.98,1.71-.25,1.71-.61,2.56-.25,1.71.61,1.2,2.09-1.03,2.46-.68.86-3.08-.25-3.08h0ZM213.89,456l-1.96-.75-3.4-2.41-1.64-.03-.81,2.43,2.21.74,1.77,1.38.75,1.86-.86,2.21,3.27,1.74,1.81.42.79-.74.62-1.19,1.31-.76,1.14-1.25.16-2.63-.92-.36-4.21-.67h-.03Z"/>
                    <path className="cls-2" d="M204.72,427.34l-1.72,2.23.12,1.2h1.6l-.25,1.89-.61,3.09v1.03l1.23-.17,1.84-5.66,1.48-2.58-1.48-1.55-2.21.52h0ZM210.75,387.18l3.48-7.05-.02-2.95-.75-1.92-2.92.08-2.75,1.49-.52-.57-26.68,6.49-2.71-11.18-5.38.7-5.51.82-1.95-4.89-3.6.25-1.21,1.1-.69,5.43-5.63.94-.98.2-.06,2.54,3.85.79-2.66,3.51,5.6.94-1.16,11.39,4.26.81-2.25,11.37-4.5-.76-6.09,16.12,8.51,1.43,2.1-2.19,4.43,4.49,7.71-6.85,12.58,13.88,8.64.99,1.67,1.11,3.44-3.56,2.44-21.02,13.93-8.5.36-9.94-4.98-5.48h0ZM208.53,416.17l-1.48,1.89-1.11,1.55-.49,2.75v1.72l1.23,1.72,1.72-1.55,1.6-2.23.86-1.38-.86-3.1-1.48-1.38h0Z"/>
                    <path className="cls-2" d="M246.28,426.48l.86-1.37-1.11-1.38-.25-1.72-.25-2.24-.37-1.55-.61-.52-.86.17-.74,1.55-.49,1.03-.49,1.89v1.89l.74,1.03h1.23l1.11.34,1.23.86v.02ZM233.8,436.61l-.62-1.68-1.79-1.34-2.4-1.33-1.08.06-1.09,1.27-.46,1.27-.14,1.44.16,1.44.43,1.26-.8-.08-1.64.16-.79-.08,1.06,2.38.23,1.39-.35,1.22-.53,1.2.36.63,3.24,1.94,1.88-.47,3.71-1.99v-.81l-1.91-.94-.71-.74-.54-1.17,1.14-.53,2.29-.69,1.09-.58-.55-1.47-.21-1.73.02-.03ZM252.67,443.82l-.98.86-1.11.17-.49-.86-1.48-.51-1.23,1.03-.25,1.37-1.6-.34-1.35,1.2.37,1.54,1.23,1.03,2.46-1.2.86-.17,1.11.86.98,2.06,2.7-.69,1.11-1.54.12-2.23-1.11-1.71-1.35-.86h.01ZM292.49,389.73l-1.84-11.21-1.65.2-5.94-35.42,10.86-1.94-6.64-40.2-23.65,4.07,2.38,16.38-11.25,2.2,1.72,12.2-11.65,2.06,5.15,28.62-15.13,2.96-4.17,4.93-3.29-2.01-3.19,2.8-2.44,4.6-2.12-.18.07-1.27-2.9-1.43-2.62.1.02,2.95.02,7.32,7.39,7.5.37,5.96-6.84,12.34.09,11.43,6.85-2.49,17.08,11.4,2.77-3.95-2.09-14.42,11.67-8.76,6.12,4.49,11.16-7.84,10.33,2.04,5.84,12.41,5.48-.47,2.82-13.2-2.34-13.72,1.54-.45h.02ZM269.17,414.45l-.27-2.58-2.76-1.95-3.95.31-3.69,1.81-1.96,2.54,1.08,1.16-.3,1.18-1.08.91-1.29.37-.83.66-.83,1.55-1.76,4.53-.48,1.8-.09,1.59.71.69,1.41.39.65.87-.28.91-1.43.54.9,2.07,3.2,1.6,1.11,1.81.43-.26,1.08-.44.42-.28.62,2.19,1.44-.31,1.63-1.58,1.18-1.61-.02-1.45-1.22-1.3-1.01-1.85.6-3.1h.65l2.22,2.11,4.01-.28,3.96-1.86,2.11-2.6-.83-3.79-5.35-6.34h.02Z"/>
                    <path className="cls-2" d="M331.48,399.98l-1.72-.52-1.35.52-.12,1.21.98,2.93,1.11,3.45.86,1.72,1.72-2.24v-2.41l-1.11-1.55-.37-3.1h0ZM385.29,348.83l2.13.23.33-1.62-1.64-2.08-2.46-2.55-.82-1.39-.66,1.39v2.31l2.62,2.55.49,1.16h.01ZM385.94,342.35l1.84,2.95.74-1.39,1.35-3.3,1.48-2.95.25-2.26.49-1.57.12-1.74-1.48-.35-1.84,1.22-1.48,2.26-1.48,1.56-1.11,1.39.25,2.09.86,2.08h.01ZM380.26,340.84l-8.05-21.74-1.44-4.59-10.22-3.55-6.75,8.1-8.86-9.02-3.64-12.16,5.61-12.84-8.08-14.8,8.31-2.39-2.19-12-16.6-1.71-9.72-10.28-3.3,2.97-4.77-2.54-22.74,5.72,10.09,49.46-10.64,1.66,6.64,40.2-10.86,1.94,5.94,35.42,1.65-.2,1.84,11.21-1.54.45,2.34,13.72,2.18-2.72-.46,4.51,6.45,2.49,3.92-11.08,4.47-2.38,18.16,1.82,4.52-7.7,17.23-12.35,7.56,5.03,10.21-.03,18.19-16.85,3.63-6.39-16.75-10.12,7.68-7.3v.04ZM395.53,344.26l-.12-1.74v-1.22l-1.6,1.04-1.11.87-.61,2.08-.61,1.39-.74,2.08v1.39l-.37,1.56-2.21.69.61,1.56,1.84,1.91,1.6,1.04,1.84.17-.12-1.73-.98-2.6,1.35-1.04,1.48-1.56.74-2.26.12-2.08-1.11-1.56h0ZM357.78,385.31l-1.48,1.73-.25,1.21,1.84.86,2.46-.86.49-1.38-1.23-.86-1.84-.69h.01Z"/>
                </g>
            </g>
            <g id="Pins">
                {renderPin("Sanford", "M23.55,553.15c-.49-.64-.99-1.28-1.48-1.92-.78-1.02-1.56-2.04-2.34-3.06-1-1.3-1.28-2.76-.86-4.33.33-1.24,1.09-2.2,2.21-2.86,1.04-.61,2.16-.79,3.33-.59,1.01.16,1.93.66,2.62,1.4.73.77,1.19,1.67,1.32,2.73.14,1.13-.05,2.2-.66,3.16-.28.45-.62.86-.94,1.29-1.04,1.37-2.09,2.73-3.13,4.09-.02.03-.04.05-.07.08h0Z")}
                {renderPin("Biddiford", "M62.55,535.15c-.49-.64-.99-1.28-1.48-1.92-.78-1.02-1.56-2.04-2.34-3.06-1-1.3-1.28-2.76-.86-4.33.33-1.24,1.09-2.2,2.21-2.86,1.04-.61,2.16-.79,3.33-.59,1.01.16,1.93.66,2.62,1.4.73.77,1.19,1.67,1.32,2.73.14,1.13-.05,2.2-.66,3.16-.28.45-.62.86-.94,1.29-1.04,1.37-2.09,2.73-3.13,4.09-.02.03-.04.05-.07.08h0Z")}
                {renderPin("Scarborough", "M72.55,520.15c-.49-.64-.99-1.28-1.48-1.92-.78-1.02-1.56-2.04-2.34-3.06-1-1.3-1.28-2.76-.86-4.33.33-1.24,1.09-2.2,2.21-2.86,1.04-.61,2.16-.79,3.33-.59,1.01.16,1.93.66,2.62,1.4.73.77,1.19,1.67,1.32,2.73.14,1.13-.05,2.2-.66,3.16-.28.45-.62.86-.94,1.29-1.04,1.37-2.09,2.73-3.13,4.09-.02.03-.04.05-.07.08h0Z")}
                {renderPin("Lewiston", "M71.55,455.15c-.49-.64-.99-1.28-1.48-1.92-.78-1.02-1.56-2.04-2.34-3.06-1-1.3-1.28-2.76-.86-4.33.33-1.24,1.09-2.2,2.21-2.86,1.04-.61,2.16-.79,3.33-.59,1.01.16,1.93.66,2.62,1.4.73.77,1.19,1.67,1.32,2.73.14,1.13-.05,2.2-.66,3.16-.28.45-.62.86-.94,1.29-1.04,1.37-2.09,2.73-3.13,4.09-.02.03-.04.05-.07.08h0Z")}
                {renderPin("Gray", "M61.55,494.15c-.49-.64-.99-1.28-1.48-1.92-.78-1.02-1.56-2.04-2.34-3.06-1-1.3-1.28-2.76-.86-4.33.33-1.24,1.09-2.2,2.21-2.86,1.04-.61,2.16-.79,3.33-.59,1.01.16,1.93.66,2.62,1.4.73.77,1.19,1.67,1.32,2.73.14,1.13-.05,2.2-.66,3.16-.28.45-.62.86-.94,1.29-1.04,1.37-2.09,2.73-3.13,4.09-.02.03-.04.05-.07.08h0Z")}
                {renderPin("Farmington", "M90.55,372.15c-.49-.64-.99-1.28-1.48-1.92-.78-1.02-1.56-2.04-2.34-3.06-1-1.3-1.28-2.76-.86-4.33.33-1.24,1.09-2.2,2.21-2.86,1.04-.61,2.16-.79,3.33-.59,1.01.16,1.93.66,2.62,1.4.73.77,1.19,1.67,1.32,2.73.14,1.13-.05,2.2-.66,3.16-.28.45-.62.86-.94,1.29-1.04,1.37-2.09,2.73-3.13,4.09-.02.03-.04.05-.07.08h0Z")}
                {renderPin("Brewer", "M215.55,373.15c-.49-.64-.99-1.28-1.48-1.92-.78-1.02-1.56-2.04-2.34-3.06-1-1.3-1.28-2.76-.86-4.33.33-1.24,1.09-2.2,2.21-2.86,1.04-.61,2.16-.79,3.33-.59,1.01.16,1.93.66,2.62,1.4.73.77,1.19,1.67,1.32,2.73.14,1.13-.05,2.2-.66,3.16-.28.45-.62.86-.94,1.29-1.04,1.37-2.09,2.73-3.13,4.09-.02.03-.04.05-.07.08h0Z")}
                {renderPin("Elseworth", "M237.55,410.15c-.49-.64-.99-1.28-1.48-1.92-.78-1.02-1.56-2.04-2.34-3.06-1-1.3-1.28-2.76-.86-4.33.33-1.24,1.09-2.2,2.21-2.86,1.04-.61,2.16-.79,3.33-.59,1.01.16,1.93.66,2.62,1.4.73.77,1.19,1.67,1.32,2.73.14,1.13-.05,2.2-.66,3.16-.28.45-.62.86-.94,1.29-1.04,1.37-2.09,2.73-3.13,4.09-.02.03-.04.05-.07.08h0Z")}
                {renderPin("Waterville", "M139.55,411.15c-.49-.64-.99-1.28-1.48-1.92-.78-1.02-1.56-2.04-2.34-3.06-1-1.3-1.28-2.76-.86-4.33.33-1.24,1.09-2.2,2.21-2.86,1.04-.61,2.16-.79,3.33-.59,1.01.16,1.93.66,2.62,1.4.73.77,1.19,1.67,1.32,2.73.14,1.13-.05,2.2-.66,3.16-.28.45-.62.86-.94,1.29-1.04,1.37-2.09,2.73-3.13,4.09-.02.03-.04.05-.07.08h0Z")}
                {renderPin("Licoln", "M231.55,324.15c-.49-.64-.99-1.28-1.48-1.92-.78-1.02-1.56-2.04-2.34-3.06-1-1.3-1.28-2.76-.86-4.33.33-1.24,1.09-2.2,2.21-2.86,1.04-.61,2.16-.79,3.33-.59,1.01.16,1.93.66,2.62,1.4.73.77,1.19,1.67,1.32,2.73.14,1.13-.05,2.2-.66,3.16-.28.45-.62.86-.94,1.29-1.04,1.37-2.09,2.73-3.13,4.09-.02.03-.04.05-.07.08h0Z")}
                {renderPin("Calis", "M363.55,330.15c-.49-.64-.99-1.28-1.48-1.92-.78-1.02-1.56-2.04-2.34-3.06-1-1.3-1.28-2.76-.86-4.33.33-1.24,1.09-2.2,2.21-2.86,1.04-.61,2.16-.79,3.33-.59,1.01.16,1.93.66,2.62,1.4.73.77,1.19,1.67,1.32,2.73.14,1.13-.05,2.2-.66,3.16-.28.45-.62.86-.94,1.29-1.04,1.37-2.09,2.73-3.13,4.09-.02.03-.04.05-.07.08h0Z")}
                {renderPin("Houlton", "M301.55,203.15c-.49-.64-.99-1.28-1.48-1.92-.78-1.02-1.56-2.04-2.34-3.06-1-1.3-1.28-2.76-.86-4.33.33-1.24,1.09-2.2,2.21-2.86,1.04-.61,2.16-.79,3.33-.59,1.01.16,1.93.66,2.62,1.4.73.77,1.19,1.67,1.32,2.73.14,1.13-.05,2.2-.66,3.16-.28.45-.62.86-.94,1.29-1.04,1.37-2.09,2.73-3.13,4.09-.02.03-.04.05-.07.08h0Z")}
                {renderPin("Presque_Isle", "M289.55,105.15c-.49-.64-.99-1.28-1.48-1.92-.78-1.02-1.56-2.04-2.34-3.06-1-1.3-1.28-2.76-.86-4.33.33-1.24,1.09-2.2,2.21-2.86,1.04-.61,2.16-.79,3.33-.59,1.01.16,1.93.66,2.62,1.4.73.77,1.19,1.67,1.32,2.73.14,1.13-.05,2.2-.66,3.16-.28.45-.62.86-.94,1.29-1.04,1.37-2.09,2.73-3.13,4.09-.02.03-.04.05-.07.08h0Z", "Presque Isle")}
                {renderPin("Madawaska", "M267.55,33.15c-.49-.64-.99-1.28-1.48-1.92-.78-1.02-1.56-2.04-2.34-3.06-1-1.3-1.28-2.76-.86-4.33.33-1.24,1.09-2.2,2.21-2.86,1.04-.61,2.16-.79,3.33-.59,1.01.16,1.93.66,2.62,1.4.73.77,1.19,1.67,1.32,2.73.14,1.13-.05,2.2-.66,3.16-.28.45-.62.86-.94,1.29-1.04,1.37-2.09,2.73-3.13,4.09-.02.03-.04.05-.07.08h0Z")}
            </g>

            {hoveredPin && (
                <g id="Tooltip" style={{ pointerEvents: 'none' }}>
                    <foreignObject
                        x={tooltipPosition.x}
                        y={tooltipPosition.y}
                        width="200"
                        height="30"
                        style={{ overflow: 'visible' }}
                    >
                        <div
                            ref={tooltipRef}
                            style={{
                                background: 'hsl(var(--heroui-secondary))',
                                color: 'hsl(var(--heroui-primary))',
                                padding: '4px 10px',
                                borderRadius: '0',
                                fontSize: '13px',
                                fontWeight: '900',
                                whiteSpace: 'nowrap',
                                boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3)',
                                fontFamily: 'dunbar-tall, sans-serif',
                                width: 'fit-content',
                                display: 'inline-block'
                            }}
                        >
                            {getLocationName(hoveredPin,
                                hoveredPin === 'Presque_Isle' ? 'Presque Isle' : undefined
                            )}
                        </div>
                    </foreignObject>
                </g>
            )}
        </svg>
    );
}